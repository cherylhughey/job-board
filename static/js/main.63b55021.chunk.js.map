{"version":3,"sources":["reducers/reducersUtils.js","reducers/index.js","actions/index.js","components/FiltersBar.js","containers/FiltersBarContainer.js","components/Board.js","containers/BoardContainer.js","components/Job.js","containers/JobContainer.js","components/Map.js","containers/MapContainer.js","components/App.js","containers/AppContainer.js","serviceWorker.js","index.js"],"names":["unwrapCategoriesFromJobs","jobs","categories","forEach","job","push","marker_icon","uniqueCategories","Object","toConsumableArray","Set","sort","splice","indexOf","jobsShape","filtersShape","data","checkedCategory","mapData","combineReducers","state","arguments","length","undefined","action","type","filters","objectSpread","category","filter","jobCategory","map","jobId","title","companyName","company_name","lat","latitude","lon","longitude","unwrapCategories","switchCategory","dispatch","updateMapDataWithCategory","FiltersBar","handleCategoryActive","categoriesEl","document","querySelector","querySelectorAll","el","classList","remove","activeCategory","find","innerText","add","handleCategoryClick","_this","props","Categories","i","react_default","a","createElement","Link","to","PUBLIC_URL","key","className","onClick","prevProps","this","id","Component","mapDispatchToProps","FiltersBarContainer","connect","Board","handleUpdateMap","updateMapDataWithJob","JobCard","item","salary","salary_from","salary_to","salary_currency","toUpperCase","skills","skill","separator","name","slice","src","company_logo_url","alt","city","street","_this2","currentCategory","routeParamCategory","BoardContainer","Job","skillLevel","icons","skillsIcons","level","company_url","target","rel","href","employment_type","toLowerCase","experience_level","remote","Date","published_at","toLocaleString","day","month","year","currentJobId","routeParamId","JobContainer","Map","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","initMap","L","maxZoom","tileLayer","attribution","addTo","on","setView","updateMap","coordsData","group","markerGroup","clearLayers","marker","bindPopup","popup","setContent","concat","setState","redirect","should","path","addLayer","fitBounds","getBounds","padding","featureGroup","invalidateSize","Redirect","MapContainer","App","fetchJobs","BrowserRouter","Switch","Route","exact","component","pathname","route","match","params","fetch","then","response","json","catch","error","console","log","AppContainer","Boolean","window","location","hostname","__webpack_require__","d","__webpack_exports__","process","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2OAAaA,EAA2B,SAAAC,GACtC,IAAIC,EAAa,CAAC,OAClBD,EAAKE,QAAQ,SAAAC,GACXF,EAAWG,KAAKD,EAAIE,eAEtB,IAAIC,EAAgBC,OAAAC,EAAA,EAAAD,CAAO,IAAIE,IAAIR,IAMnC,OALAK,EAAiBI,OAEjBJ,EAAiBF,KACfE,EAAiBK,OAAOL,EAAiBM,QAAQ,SAAU,GAAG,IAEzDN,GCJHO,EAAY,GAWZC,EAAe,CACnBC,KAAM,GACNC,gBAAiB,MACjBC,QAAS,IA8BIC,cAAgB,CAC7BlB,KA3CW,WAA+B,IAA9BmB,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBP,EAAWU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,OAAQC,EAAOC,MACb,IAAK,eACH,OAAOD,EAAOvB,KAChB,QACE,OAAOmB,IAuCXM,QA7Bc,WAAkC,IDOdtB,EAjBMH,EAAMgB,ECU/BG,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQC,EAAOC,MACb,IAAK,oBACH,OAAOjB,OAAAmB,EAAA,EAAAnB,CAAA,GACFY,EADL,CAEEJ,KAAMhB,EAAyBwB,EAAOvB,QAE1C,IAAK,mBACH,OAAOO,OAAAmB,EAAA,EAAAnB,CAAA,GACFY,EADL,CAEEH,gBAAiBO,EAAOI,WAE5B,IAAK,gCACH,OAAOpB,OAAAmB,EAAA,EAAAnB,CAAA,GACFY,EADL,CAEEF,SDzBkCjB,ECyBCuB,EAAOvB,KDzBFgB,ECyBQO,EAAOP,gBDxB7DhB,EACG4B,OAAO,SAAAzB,GACN,IAAM0B,EAAc1B,EAAIE,YACxB,OACEwB,KACqB,QAApBb,EAA4Ba,EAAcb,KAG9Cc,IAAI,SAAA3B,GAAG,MAAK,CACX4B,MAAO5B,EAAI,OACX6B,MAAO7B,EAAI6B,MACXC,YAAa9B,EAAI+B,aACjBC,IAAKhC,EAAIiC,SACTC,IAAKlC,EAAImC,gBCaX,IAAK,2BACH,OAAO/B,OAAAmB,EAAA,EAAAnB,CAAA,GACFY,EADL,CAEEF,QAAS,EDbmBd,ECaGoB,EAAOpB,IDbF,CAC1C4B,MAAO5B,EAAI,OACX6B,MAAO7B,EAAI6B,MACXC,YAAa9B,EAAI+B,aACjBC,IAAKhC,EAAIiC,SACTC,IAAKlC,EAAImC,eCUP,QACE,OAAOnB,MC7BPoB,EAAmB,SAAAvC,GAAI,MAAK,CAChCwB,KAAM,oBACNxB,SAGWgB,EAAkB,SAAAW,GAAQ,MAAK,CAC1CH,KAAM,mBACNG,aAcWa,EAAiB,SAACxC,EAAM2B,GAAP,OAAoB,SAAAc,GAChDA,EAASzB,EAAgBW,IACzBc,EAbgC,SAACzC,EAAMgB,GAAP,MAA4B,CAC5DQ,KAAM,gCACNxB,OACAgB,mBAUS0B,CAA0B1C,EAAM2B,kFCe5BgB,6MA5CbC,qBAAuB,SAAA5B,GACrB,IAAI6B,EAAeC,SAASC,cAAc,gBAE1CF,EACGG,iBAAiB,QACjB9C,QAAQ,SAAA+C,GAAE,OAAIA,EAAGC,UAAUC,OAAO,YAErC,IAAIC,EAAiB7C,OAAAC,EAAA,EAAAD,CAAIsC,EAAaG,iBAAiB,SAASK,KAC9D,SAAAJ,GAAE,OAAIA,EAAGK,YAActC,SAEFM,IAAnB8B,GAA8BA,EAAeF,UAAUK,IAAI,aAGjEC,oBAAsB,SAAA7B,GACpB8B,EAAKC,MAAMlB,eAAeiB,EAAKC,MAAM1D,KAAM2B,MAG7CgC,WAAa,WACX,OAAOF,EAAKC,MAAMzD,WAAW6B,IAAI,SAACH,EAAUiC,GAAX,OAC/BC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,GAAIC,EAAa,kBAAoBvC,EACrCwC,IAAKxC,EACLyC,UAAU,eACVC,QAAS,kBAAMZ,EAAKD,oBAAoB7B,KAExCkC,EAAAC,EAAAC,cAAA,QAAMK,UAAiB,IAANR,EAAU,SAAW,IAAKjC,EAAW,2FAhCzC2C,GACjB,IAAMtD,EAAkBuD,KAAKb,MAAM1C,gBAC/BsD,EAAUtD,kBAAoBA,GAChCuD,KAAK3B,qBAAqB2B,KAAKb,MAAM1C,kDAmCvC,OACE6C,EAAAC,EAAAC,cAAA,OAAKS,GAAG,cAAcJ,UAAU,oBAC9BP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iCACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAAQ,KAAMZ,WAAN,MACAE,EAAAC,EAAAC,cAAA,MAAIK,UAAU,mBA5CDK,aCMnBC,EAAqB,CAAElC,kBAEhBmC,EAAsBC,YARX,SAAAzD,GAAK,MAAK,CAChCnB,KAAMmB,EAAMnB,KACZC,WAAYkB,EAAMM,QAAQV,KAC1BC,gBAAiBG,EAAMM,QAAQT,kBAO/B0D,EAFiCE,CAGjCjC,GCwEakC,6MAlFbC,gBAAkB,SAAA3E,GAChBsD,EAAKC,MAAM1C,gBAAgB,IAC3ByC,EAAKC,MAAMqB,qBAAqB5E,MAGlC6E,QAAU,SAAAC,GACR,IAAM9E,EAAM8E,EAAK9E,IAKX+E,EAHgB,OAApB/E,EAAIgF,aACc,OAAlBhF,EAAIiF,WACoB,OAAxBjF,EAAIkF,gBAEF,qBACAlF,EAAIgF,YACJ,MACAhF,EAAIiF,UACJ,IACAjF,EAAIkF,gBAAgBC,cAClBC,EAAShF,OAAAC,EAAA,EAAAD,CACVJ,EAAIoF,OAAOzD,IAAI,SAAC0D,EAAO5B,GACxB,IAAM6B,EAAkB,IAAN7B,EAAU,GAAK,MACjC,OAAOC,EAAAC,EAAAC,cAAA,QAAMI,IAAKqB,EAAME,MAAOD,EAAYD,EAAME,SAEnDC,MAAM,EAAG,GAEX,OACE9B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oFACbP,EAAAC,EAAAC,cAAA,OAAK6B,IAAKzF,EAAI0F,iBAAkBC,IAAI,GAAG1B,UAAU,kBAEnDP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,cACZP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,GAAIC,EAAa,WAAa/D,EAAI,OAClCkE,QAAS,kBAAMZ,EAAKqB,gBAAgB3E,KAEpC0D,EAAAC,EAAAC,cAAA,SAAI5D,EAAI6B,UAId6B,EAAAC,EAAAC,cAAA,KAAGK,UAAU,aACXP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,cACfP,EAAAC,EAAAC,cAAA,YACG5D,EAAI+B,aAAe,MAAQ/B,EAAI4F,KAAO,KAAO5F,EAAI6F,YAM5DnC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,UAAUc,IAE5BrB,EAAAC,EAAAC,cAAA,KAAGK,UAAU,aACXP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,cACfP,EAAAC,EAAAC,cAAA,YAAOwB,kFAUd,IAAAU,EAAA1B,KACD2B,EAAkB3B,KAAKb,MAAMyC,mBAQnC,OAPa5B,KAAKb,MAAM1D,KACrB4B,OACC,SAAAzB,GAAG,OACDA,EAAIE,eACiB,QAApB6F,EAA4B/F,EAAIE,YAAc6F,KAElDpE,IAAI,SAAA3B,GAAG,OAAI0D,EAAAC,EAAAC,cAACkC,EAAKjB,QAAN,CAAc7E,IAAKA,EAAKgE,IAAKhE,EAAI,kBA9E/BsE,aCIdC,EAAqB,CAAE1D,kBAAiB+D,qBJ0BV,SAAA5E,GAAG,MAAK,CAC1CqB,KAAM,2BACNrB,SI1BWiG,EAAiBxB,YANN,SAAAzD,GAAK,MAAK,CAChCnB,KAAMmB,EAAMnB,OAOZ0E,EAF4BE,CAG5BC,GCuLawB,6MA/LbA,IAAM,SAAApB,GACJ,IAAM9E,EAAM8E,EAAK9E,IAMX+E,EAHgB,OAApB/E,EAAIgF,aACc,OAAlBhF,EAAIiF,WACoB,OAAxBjF,EAAIkF,gBAEF,qBACAlF,EAAIgF,YACJ,MACAhF,EAAIiF,UACJ,IACAjF,EAAIkF,gBAAgBC,cAclBC,EAAMhF,OAAAC,EAAA,EAAAD,CACPJ,EAAIoF,OAAOzD,IAAI,SAAA0D,GAAK,OACrB3B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBAAgBD,IAAKqB,EAAME,MACxC7B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,0CACZoB,EAAME,MAET7B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,qCAlBD,SAAAkC,GAElB,IADA,IAAIC,EAAQ,GACH3C,EAAI,EAAGA,EAAI,EAAGA,IACrB2C,EAAMnG,KACJyD,EAAAC,EAAAC,cAAA,KACEI,IAAKP,EACLQ,UAAWR,EAAI0C,EAAa,gBAAkB,mBAIpD,OAAOzC,EAAAC,EAAAC,cAAA,YAAOwC,GASPC,CAAYhB,EAAMiB,YAM3B,OACE5C,EAAAC,EAAAC,cAAA,OAAKS,GAAG,OACNX,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iEACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEI,UAAU,mDACVH,GAAI9D,EAAIuG,aAER7C,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YAAY0B,IAAI,GAAGF,IAAKzF,EAAI0F,qBAG/ChC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,UAAK5D,EAAI6B,QAEX6B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uBACbP,EAAAC,EAAAC,cAAA,UAAKmB,KAGTrB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,KACE4C,OAAO,SACPC,IAAI,sBACJC,KAAM1G,EAAIuG,aAEV7C,EAAAC,EAAAC,cAAA,UAAK5D,EAAI+B,gBAGb2B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uBACbP,EAAAC,EAAAC,cAAA,UAAK5D,EAAI2G,gBAAgBC,iBAG7BlD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,wDACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,UAAK5D,EAAI4F,KAAO,KAAO5F,EAAI6F,SAE7BnC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uBACbP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAIC,EAAa,MAAvB,SAEEL,EAAAC,EAAAC,cAAA,KAAGK,UAAU,8BAMvBP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,6CACbP,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QACES,GAAG,IACHJ,UAC2B,WAAzBjE,EAAI6G,iBAAgC,YAAc,SAHtD,UAQAnD,EAAAC,EAAAC,cAAA,QAAMK,UAAU,SAAhB,aACAP,EAAAC,EAAAC,cAAA,QACES,GAAG,IACHJ,UAC2B,QAAzBjE,EAAI6G,iBAA6B,YAAc,SAHnD,OAQAnD,EAAAC,EAAAC,cAAA,QAAMK,UAAU,SAAhB,aACAP,EAAAC,EAAAC,cAAA,QACES,GAAG,IACHJ,UAC2B,WAAzBjE,EAAI6G,iBAAgC,YAAc,SAHtD,UAQAnD,EAAAC,EAAAC,cAAA,aAGJF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gDACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OAAOmB,KAG1B1B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,qDACbP,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,WADF,kBAGG5D,EAAI8G,OACHpD,EAAAC,EAAAC,cAAA,KAAGK,UAAU,iBAEbP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,qBAMvBP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,6BACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,6cAUAF,EAAAC,EAAAC,cAAA,syBAgBFF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kCACZ,IAAI8C,KAAK/G,EAAIgH,cAAcC,eAAe,QAAS,CAClDC,IAAK,UACLC,MAAO,UACPC,KAAM,yFAUlB,IAAMC,EAAejD,KAAKb,MAAM+D,aAC1BtH,EAAMoE,KAAKb,MAAM1D,KAAKqD,KAAK,SAAAlD,GAAG,OAAIA,EAAI,SAAWqH,IACvD,OACE3D,EAAAC,EAAAC,cAAA,gBACWzC,IAARnB,EAAoB0D,EAAAC,EAAAC,cAAAQ,KAAM8B,IAAN,CAAUlG,IAAKA,IAAU,6BA1LpCsE,aCGLiD,EAAe9C,YAJJ,SAAAzD,GAAK,MAAK,CAChCnB,KAAMmB,EAAMnB,OAGc4E,CAAyByB,oBC0EtCsB,cA5Eb,SAAAA,EAAYjE,GAAO,IAAAD,EAAA,OAAAlD,OAAAqH,EAAA,EAAArH,CAAAgE,KAAAoD,IACjBlE,EAAAlD,OAAAsH,EAAA,EAAAtH,CAAAgE,KAAAhE,OAAAuH,EAAA,EAAAvH,CAAAoH,GAAAI,KAAAxD,KAAMb,KAuBRsE,QAAU,WACRvE,EAAK3B,IAAMmG,IAAEnG,IAAI,MAAO,CACtBoG,QAAS,KAGXD,IAAEE,UAAU,qDAAsD,CAChEC,YACE,6EACDC,MAAM5E,EAAK3B,KAEd2B,EAAK3B,IAAIwG,GAAG,OAAQ,WAClB7E,EAAK3B,IAAIyG,QAAQ,CAAC,GAAI,QAnCP9E,EAuCnB+E,UAAY,SAAAC,GACV,IAAM3G,EAAM2B,EAAK3B,IACb4G,EAAQjF,EAAKkF,YACjBD,EAAME,cACNH,EAAWvI,QAAQ,SAAAa,GACjB,IAAI8H,EAASZ,IAAEY,OAAO,CAAC9H,EAAKoB,IAAKpB,EAAKsB,MACtCwG,EAAOC,UACLb,IAAEc,QAAQC,WAAV,wBAAAC,OAC0BlI,EAAKiB,MAD/B,yBAAAiH,OAESlI,EAAKkB,YAFd,UAKF4G,EAAOP,GAAG,QAAS,WACjB7E,EAAKyF,SAAL3I,OAAAmB,EAAA,EAAAnB,CAAA,GACKkD,EAAKtC,MADV,CAEEgI,SAAU,CACRC,QAAQ,EACRC,KAAM,WAAatI,EAAKgB,YAI9B2G,EAAMY,SAAST,GACfH,EAAML,MAAMvG,KAEdA,EAAIyH,UAAUb,EAAMc,YAAa,CAAEC,QAAS,CAAC,EAAG,OA7DhDhG,EAAKtC,MAAQ,CACXgI,SAAU,CACRC,QAAQ,EACRC,KAAM,KAGV5F,EAAK3B,IAAM,KACX2B,EAAKkF,YAAcV,IAAEyB,eATJjG,mFAajBc,KAAKyD,qDAGY1D,GACjB,IAAMrD,EAAUsD,KAAKb,MAAMzC,QACvBqD,EAAUrD,UAAYA,IACxBsD,KAAKiE,UAAUvH,GACfsD,KAAKzC,IAAI6H,gBAAe,qCA+C1B,OAAIpF,KAAKpD,MAAMgI,SAASC,OACfvF,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAU3F,GAAIM,KAAKpD,MAAMgI,SAASE,OAG/B,OADA9E,KAAKzC,IACQ,iBAClB,UAzEO2C,aCKLoF,EAAejF,YANJ,SAAAzD,GAAK,MAAK,CAChCnB,KAAMmB,EAAMnB,KACZgB,gBAAiBG,EAAMM,QAAQT,gBAC/BC,QAASE,EAAMM,QAAQR,UAGG2D,CAAyB+C,GC2DtCmC,cAtDb,SAAAA,EAAYpG,GAAO,IAAAD,EAAA,OAAAlD,OAAAqH,EAAA,EAAArH,CAAAgE,KAAAuF,IACjBrG,EAAAlD,OAAAsH,EAAA,EAAAtH,CAAAgE,KAAAhE,OAAAuH,EAAA,EAAAvH,CAAAuJ,GAAA/B,KAAAxD,KAAMb,KACD5B,IAAM,KAFM2B,mFAMjBc,KAAKb,MAAMqG,6CAIX,OACElG,EAAAC,EAAAC,cAACiG,EAAA,EAAD,KACEnG,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAACY,EAAD,MACAd,EAAAC,EAAAC,cAAA,OAAKS,GAAG,MAAMJ,UAAU,QACtBP,EAAAC,EAAAC,cAAC8F,EAAD,OAEFhG,EAAAC,EAAAC,cAAA,OAAKS,GAAG,QAAQJ,UAAU,sCACxBP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CACEC,OAAK,EACLd,KAAK,IACLe,UAAW,kBACTvG,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CACE3F,GAAI,CACFoG,SAAUnG,EAAa,2BAK/BL,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CACEb,KAAMnF,EAAa,2BACnBkG,UAAW,SAAAE,GAAK,OACdzG,EAAAC,EAAAC,cAACqC,EAAD,CACED,mBAAoBmE,EAAMC,MAAMC,OAAO7I,cAI7CkC,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CACEb,KAAMnF,EAAa,cACnBkG,UAAW,SAAAE,GAAK,OACdzG,EAAAC,EAAAC,cAAC2D,EAAD,CAAcD,aAAc6C,EAAMC,MAAMC,OAAOhG,oBA3CjDC,aCLZC,EAAqB,CAAEqF,UVDJ,kBAAM,SAAAtH,GAC7BgI,MARU,mCASPC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAA3J,GACJ0B,EATuB,CAC3BjB,KAAM,eACNxB,KAOyBe,IACrB0B,EAASF,EAAiBxB,IAC1B0B,EAASD,EAAezB,EAAM,UAE/B8J,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OUPQ9J,mBAE3BiK,EAAerG,YANJ,SAAAzD,GAAK,MAAK,CAChCA,MAAOA,IAOPuD,EAF0BE,CAG1BkF,GCDkBoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASd,MACvB,2DClBNe,EAAAC,EAAAC,EAAA,+BAAAtH,IAUO,IAAMA,EAAauH,aACpBC,EAAQC,YAAYC,EAAaC,YAAgBC,MAEvDC,IAASC,OACPnI,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CAAUP,MAAOA,GACf7H,EAAAC,EAAAC,cAACkH,EAAD,OAEFnI,SAASoJ,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3B,KAAK,SAAA4B,GACjCA,EAAaC","file":"static/js/main.63b55021.chunk.js","sourcesContent":["export const unwrapCategoriesFromJobs = jobs => {\r\n  let categories = ['all']\r\n  jobs.forEach(job => {\r\n    categories.push(job.marker_icon)\r\n  })\r\n  let uniqueCategories = [...new Set(categories)]\r\n  uniqueCategories.sort()\r\n  // move 'other' to end\r\n  uniqueCategories.push(\r\n    uniqueCategories.splice(uniqueCategories.indexOf('other'), 1)[0]\r\n  )\r\n  return uniqueCategories\r\n}\r\n\r\nexport const createMapDataWithCategory = (jobs, checkedCategory) =>\r\n  jobs\r\n    .filter(job => {\r\n      const jobCategory = job.marker_icon\r\n      return (\r\n        jobCategory ===\r\n        (checkedCategory === 'all' ? jobCategory : checkedCategory)\r\n      )\r\n    })\r\n    .map(job => ({\r\n      jobId: job['id='],\r\n      title: job.title,\r\n      companyName: job.company_name,\r\n      lat: job.latitude,\r\n      lon: job.longitude\r\n    }))\r\n\r\nexport const createMapDataWithJob = job => ({\r\n  jobId: job['id='],\r\n  title: job.title,\r\n  companyName: job.company_name,\r\n  lat: job.latitude,\r\n  lon: job.longitude\r\n})\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n  unwrapCategoriesFromJobs,\r\n  createMapDataWithCategory,\r\n  createMapDataWithJob\r\n} from './reducersUtils'\r\n\r\nconst jobsShape = []\r\n\r\nconst jobs = (state = jobsShape, action) => {\r\n  switch (action.type) {\r\n    case 'JOBS_FETCHED':\r\n      return action.jobs\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst filtersShape = {\r\n  data: [],\r\n  checkedCategory: 'all',\r\n  mapData: []\r\n}\r\n\r\nconst filters = (state = filtersShape, action) => {\r\n  switch (action.type) {\r\n    case 'UNWRAP_CATEGORIES':\r\n      return {\r\n        ...state,\r\n        data: unwrapCategoriesFromJobs(action.jobs)\r\n      }\r\n    case 'CHECKED_CATEGORY':\r\n      return {\r\n        ...state,\r\n        checkedCategory: action.category\r\n      }\r\n    case 'UPDATE_MAP_DATA_WITH_CATEGORY':\r\n      return {\r\n        ...state,\r\n        mapData: createMapDataWithCategory(action.jobs, action.checkedCategory)\r\n      }\r\n    case 'UPDATE_MAP_DATA_WITH_JOB':\r\n      return {\r\n        ...state,\r\n        mapData: [createMapDataWithJob(action.job)]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  jobs,\r\n  filters\r\n})\r\n","const url = 'https://test.justjoin.it/offers'\r\n\r\nconst jobsFetched = jobs => ({\r\n  type: 'JOBS_FETCHED',\r\n  jobs\r\n})\r\n\r\nexport const fetchJobs = () => dispatch => {\r\n  fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      dispatch(jobsFetched(data))\r\n      dispatch(unwrapCategories(data))\r\n      dispatch(switchCategory(data, 'all'))\r\n    })\r\n    .catch(error => console.log(error))\r\n}\r\n\r\nconst unwrapCategories = jobs => ({\r\n  type: 'UNWRAP_CATEGORIES',\r\n  jobs\r\n})\r\n\r\nexport const checkedCategory = category => ({\r\n  type: 'CHECKED_CATEGORY',\r\n  category\r\n})\r\n\r\nconst updateMapDataWithCategory = (jobs, checkedCategory) => ({\r\n  type: 'UPDATE_MAP_DATA_WITH_CATEGORY',\r\n  jobs,\r\n  checkedCategory\r\n})\r\n\r\nexport const updateMapDataWithJob = job => ({\r\n  type: 'UPDATE_MAP_DATA_WITH_JOB',\r\n  job\r\n})\r\n\r\nexport const switchCategory = (jobs, category) => dispatch => {\r\n  dispatch(checkedCategory(category))\r\n  dispatch(updateMapDataWithCategory(jobs, category))\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { PUBLIC_URL } from '../index'\r\n\r\nclass FiltersBar extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    const checkedCategory = this.props.checkedCategory\r\n    if (prevProps.checkedCategory !== checkedCategory) {\r\n      this.handleCategoryActive(this.props.checkedCategory)\r\n    }\r\n  }\r\n\r\n  handleCategoryActive = checkedCategory => {\r\n    let categoriesEl = document.querySelector('#filters-bar')\r\n    // unactive all categories\r\n    categoriesEl\r\n      .querySelectorAll('span')\r\n      .forEach(el => el.classList.remove('active'))\r\n    // active checked category\r\n    let activeCategory = [...categoriesEl.querySelectorAll('span')].find(\r\n      el => el.innerText === checkedCategory\r\n    )\r\n    if (activeCategory !== undefined) activeCategory.classList.add('active')\r\n  }\r\n\r\n  handleCategoryClick = category => {\r\n    this.props.switchCategory(this.props.jobs, category)\r\n  }\r\n\r\n  Categories = () => {\r\n    return this.props.categories.map((category, i) => (\r\n      <Link\r\n        to={PUBLIC_URL + '/jobs/category-' + category}\r\n        key={category}\r\n        className='navbar-brand'\r\n        onClick={() => this.handleCategoryClick(category)}\r\n      >\r\n        <span className={i === 0 ? 'active' : ''}>{category + ' '}</span>\r\n      </Link>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='filters-bar' className='text-center pt-5'>\r\n        <div className='row justify-content-md-center'>\r\n          <div className='col-sm-8'>\r\n            <this.Categories />\r\n            <hr className='pb-1' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FiltersBar\r\n","import { connect } from 'react-redux'\r\nimport FiltersBar from '../components/FiltersBar'\r\nimport { switchCategory } from '../actions/index'\r\n\r\nconst mapStateToProps = state => ({\r\n  jobs: state.jobs,\r\n  categories: state.filters.data,\r\n  checkedCategory: state.filters.checkedCategory\r\n})\r\n\r\nconst mapDispatchToProps = { switchCategory }\r\n\r\nexport const FiltersBarContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FiltersBar)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { PUBLIC_URL } from '../index'\r\n\r\nclass Board extends Component {\r\n  handleUpdateMap = job => {\r\n    this.props.checkedCategory('')\r\n    this.props.updateMapDataWithJob(job)\r\n  }\r\n\r\n  JobCard = item => {\r\n    const job = item.job\r\n    const isUndisclosedSalary =\r\n      job.salary_from === null ||\r\n      job.salary_to === null ||\r\n      job.salary_currency === null\r\n    const salary = isUndisclosedSalary\r\n      ? 'Undisclosed salary'\r\n      : job.salary_from +\r\n        ' - ' +\r\n        job.salary_to +\r\n        ' ' +\r\n        job.salary_currency.toUpperCase()\r\n    const skills = [\r\n      ...job.skills.map((skill, i) => {\r\n        const separator = i === 0 ? '' : ' | '\r\n        return <span key={skill.name}>{separator + skill.name}</span>\r\n      })\r\n    ].slice(0, 2)\r\n\r\n    return (\r\n      <div className='card mb-3'>\r\n        <div className='row no-gutters'>\r\n          <div className='col-sm-2 d-flex flex-wrap align-items-center justify-content-center pt-3 pt-sm-0'>\r\n            <img src={job.company_logo_url} alt='' className='job-card-img' />\r\n          </div>\r\n          <div className='col-sm-6'>\r\n            <div className='card-body'>\r\n              <h5 className='card-title'>\r\n                <div className='job-title'>\r\n                  <Link\r\n                    to={PUBLIC_URL + '/job/id-' + job['id=']}\r\n                    onClick={() => this.handleUpdateMap(job)}\r\n                  >\r\n                    <p>{job.title}</p>\r\n                  </Link>\r\n                </div>\r\n              </h5>\r\n              <p className='card-text'>\r\n                <small className='text-muted'>\r\n                  <span>\r\n                    {job.company_name + ' - ' + job.city + ', ' + job.street}\r\n                  </span>\r\n                </small>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className='col-sm-4 text-right'>\r\n            <div className='card-body'>\r\n              <div className='card-text mb-3'>\r\n                <span className='salary'>{salary}</span>\r\n              </div>\r\n              <p className='card-text'>\r\n                <small className='text-muted'>\r\n                  <span>{skills}</span>\r\n                </small>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const currentCategory = this.props.routeParamCategory\r\n    const jobs = this.props.jobs\r\n      .filter(\r\n        job =>\r\n          job.marker_icon ===\r\n          (currentCategory === 'all' ? job.marker_icon : currentCategory)\r\n      )\r\n      .map(job => <this.JobCard job={job} key={job['id=']} />)\r\n    return jobs\r\n  }\r\n}\r\n\r\nexport default Board\r\n","import { connect } from 'react-redux'\r\nimport Board from '../components/Board'\r\nimport { checkedCategory, updateMapDataWithJob } from '../actions/index'\r\n\r\nconst mapStateToProps = state => ({\r\n  jobs: state.jobs\r\n})\r\n\r\nconst mapDispatchToProps = { checkedCategory, updateMapDataWithJob }\r\n\r\nexport const BoardContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Board)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { PUBLIC_URL } from '../index'\r\n\r\nclass Job extends Component {\r\n  Job = item => {\r\n    const job = item.job\r\n\r\n    const isUndisclosedSalary =\r\n      job.salary_from === null ||\r\n      job.salary_to === null ||\r\n      job.salary_currency === null\r\n    const salary = isUndisclosedSalary\r\n      ? 'Undisclosed salary'\r\n      : job.salary_from +\r\n        ' - ' +\r\n        job.salary_to +\r\n        ' ' +\r\n        job.salary_currency.toUpperCase()\r\n\r\n    const skillsIcons = skillLevel => {\r\n      let icons = []\r\n      for (let i = 0; i < 5; i++) {\r\n        icons.push(\r\n          <i\r\n            key={i}\r\n            className={i < skillLevel ? 'fas fa-circle' : 'far fa-circle'}\r\n          />\r\n        )\r\n      }\r\n      return <span>{icons}</span>\r\n    }\r\n    const skills = [\r\n      ...job.skills.map(skill => (\r\n        <div className='col ml-3 mr-3' key={skill.name}>\r\n          <div className='row d-flex justify-content-center pb-1'>\r\n            {skill.name}\r\n          </div>\r\n          <div className='row d-flex justify-content-center'>\r\n            {skillsIcons(skill.level)}\r\n          </div>\r\n        </div>\r\n      ))\r\n    ]\r\n\r\n    return (\r\n      <div id='job'>\r\n        <div className='job-card row d-flex align-items-center justify-content-center'>\r\n          <div className='col-sm-2 '>\r\n            <Link\r\n              className='d-flex align-items-center justify-content-center'\r\n              to={job.company_url}\r\n            >\r\n              <img className='pt-2 pb-2' alt='' src={job.company_logo_url} />\r\n            </Link>\r\n          </div>\r\n          <div className='col-sm-10'>\r\n            <div className='row'>\r\n              <div className='col-sm-6'>\r\n                <h4>{job.title}</h4>\r\n              </div>\r\n              <div className='col-sm-6 text-right'>\r\n                <h4>{salary}</h4>\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div className='col-sm-6'>\r\n                <a\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                  href={job.company_url}\r\n                >\r\n                  <h5>{job.company_name}</h5>\r\n                </a>\r\n              </div>\r\n              <div className='col-sm-6 text-right'>\r\n                <h5>{job.employment_type.toLowerCase()}</h5>\r\n              </div>\r\n            </div>\r\n            <div className='row d-flex align-items-center justify-content-center'>\r\n              <div className='col-sm-6'>\r\n                <h6>{job.city + ', ' + job.street}</h6>\r\n              </div>\r\n              <div className='col-sm-6 text-right'>\r\n                <Link to={PUBLIC_URL + '/#'}>\r\n                  Apply!\r\n                  <i className='far fa-envelope ml-2' />\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='job-card row'>\r\n          <div className='col-sm-12'>\r\n            <div className='job-lvl row d-flex justify-content-center'>\r\n              <h4>\r\n                <span\r\n                  id='j'\r\n                  className={\r\n                    job.experience_level === 'junior' ? 'exhibited' : 'muted'\r\n                  }\r\n                >\r\n                  junior\r\n                </span>\r\n                <span className='muted'>&nbsp;|&nbsp;</span>\r\n                <span\r\n                  id='m'\r\n                  className={\r\n                    job.experience_level === 'mid' ? 'exhibited' : 'muted'\r\n                  }\r\n                >\r\n                  mid\r\n                </span>\r\n                <span className='muted'>&nbsp;|&nbsp;</span>\r\n                <span\r\n                  id='s'\r\n                  className={\r\n                    job.experience_level === 'senior' ? 'exhibited' : 'muted'\r\n                  }\r\n                >\r\n                  senior\r\n                </span>\r\n                <hr />\r\n              </h4>\r\n            </div>\r\n            <div className='row job-skills d-flex justify-content-center'>\r\n              <div className='col-auto'>\r\n                <div className='row'>{skills}</div>\r\n              </div>\r\n            </div>\r\n            <div className='row job-skills pt-2 d-flex justify-content-center'>\r\n              <h5>\r\n                <hr />\r\n                remote?&nbsp;&nbsp;\r\n                {job.remote ? (\r\n                  <i className='fas fa-check' />\r\n                ) : (\r\n                  <i className='fas fa-times' />\r\n                )}\r\n              </h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='job-card row text-justify'>\r\n          <div className='col'>\r\n            <div className='row'>\r\n              <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                Phasellus nec ante lectus. Maecenas sed tempor lorem. Vestibulum\r\n                iaculis justo sed enim vehicula, efficitur auctor felis\r\n                consequat. Sed ornare blandit felis nec ultricies. Donec id\r\n                tortor a mi malesuada placerat. Nam vel metus mi. In vitae\r\n                malesuada est. Nullam nec congue mi, et maximus tellus. Vivamus\r\n                vel gravida mi, nec consequat dui. Sed nec lorem dapibus,\r\n                sodales nibh in, rutrum nunc.\r\n              </p>\r\n              <p>\r\n                Ut a sapien ut libero dictum sodales. Cras porttitor dolor\r\n                maximus justo aliquam, efficitur porttitor risus tincidunt.\r\n                Morbi sagittis, libero id luctus maximus, nisi massa hendrerit\r\n                dolor, vitae auctor erat augue ut felis. Ut egestas vehicula\r\n                dictum. Ut tempus mauris et sagittis consectetur. Morbi a\r\n                vehicula massa. Nam rhoncus pharetra libero at fringilla. Nullam\r\n                a sollicitudin urna. Duis sed leo erat. Curabitur lobortis metus\r\n                metus, eget egestas lacus auctor ac. Quisque facilisis odio et\r\n                est tristique convallis. Aenean dapibus turpis eros, id\r\n                condimentum eros varius eu. Nullam id purus ut sapien ornare\r\n                ultricies ut non urna. Class aptent taciti sociosqu ad litora\r\n                torquent per conubia nostra, per inceptos himenaeos. Cras\r\n                facilisis augue quam, suscipit tincidunt velit malesuada vel.\r\n              </p>\r\n            </div>\r\n            <div className='row d-flex justify-content-end'>\r\n              {new Date(job.published_at).toLocaleString('pl-PL', {\r\n                day: 'numeric',\r\n                month: 'numeric',\r\n                year: 'numeric'\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const currentJobId = this.props.routeParamId\r\n    const job = this.props.jobs.find(job => job['id='] === currentJobId)\r\n    return (\r\n      <div>\r\n        {job !== undefined ? <this.Job job={job} /> : 'Broken job offer..'}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Job\r\n","import { connect } from 'react-redux'\r\nimport Job from '../components/Job'\r\n\r\nconst mapStateToProps = state => ({\r\n  jobs: state.jobs\r\n})\r\n\r\nexport const JobContainer = connect(mapStateToProps)(Job)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport L from 'leaflet'\r\n\r\nclass Map extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      redirect: {\r\n        should: false,\r\n        path: ''\r\n      }\r\n    }\r\n    this.map = null\r\n    this.markerGroup = L.featureGroup()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initMap()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const mapData = this.props.mapData\r\n    if (prevProps.mapData !== mapData) {\r\n      this.updateMap(mapData)\r\n      this.map.invalidateSize(false)\r\n    }\r\n  }\r\n\r\n  initMap = () => {\r\n    this.map = L.map('map', {\r\n      maxZoom: 12\r\n    })\r\n\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution:\r\n        '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n    }).addTo(this.map)\r\n\r\n    this.map.on('load', () => {\r\n      this.map.setView([50, 25])\r\n    })\r\n  }\r\n\r\n  updateMap = coordsData => {\r\n    const map = this.map\r\n    let group = this.markerGroup\r\n    group.clearLayers()\r\n    coordsData.forEach(data => {\r\n      let marker = L.marker([data.lat, data.lon])\r\n      marker.bindPopup(\r\n        L.popup().setContent(\r\n          `<p class='pb-0 mb-0'>${data.title}</p>\r\n          <p>- ${data.companyName}</p>`\r\n        )\r\n      )\r\n      marker.on('click', () => {\r\n        this.setState({\r\n          ...this.state,\r\n          redirect: {\r\n            should: true,\r\n            path: '/job/id-' + data.jobId\r\n          }\r\n        })\r\n      })\r\n      group.addLayer(marker)\r\n      group.addTo(map)\r\n    })\r\n    map.fitBounds(group.getBounds(), { padding: [0, 30] })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect.should) {\r\n      return <Redirect to={this.state.redirect.path} />\r\n    }\r\n    const map = this.map\r\n    if (map === null) return 'Loading map...'\r\n    return ''\r\n  }\r\n}\r\n\r\nexport default Map\r\n","import { connect } from 'react-redux'\r\nimport Map from '../components/Map'\r\n\r\nconst mapStateToProps = state => ({\r\n  jobs: state.jobs,\r\n  checkedCategory: state.filters.checkedCategory,\r\n  mapData: state.filters.mapData\r\n})\r\n\r\nexport const MapContainer = connect(mapStateToProps)(Map)\r\n","import React, { Component } from 'react'\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { FiltersBarContainer } from '../containers/FiltersBarContainer'\nimport { BoardContainer } from '../containers/BoardContainer'\nimport { JobContainer } from '../containers/JobContainer'\nimport { MapContainer } from '../containers/MapContainer'\nimport { PUBLIC_URL } from '../index'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.map = null\n  }\n\n  componentDidMount() {\n    this.props.fetchJobs()\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className='container'>\n          <FiltersBarContainer />\n          <div id='map' className='mb-4'>\n            <MapContainer />\n          </div>\n          <div id='board' className='row justify-content-md-center pb-5'>\n            <div className='col-sm-9'>\n              <Switch>\n                <Route\n                  exact\n                  path='/'\n                  component={() => (\n                    <Redirect\n                      to={{\n                        pathname: PUBLIC_URL + '/jobs/category-all'\n                      }}\n                    />\n                  )}\n                />\n                <Route\n                  path={PUBLIC_URL + '/jobs/category-:category'}\n                  component={route => (\n                    <BoardContainer\n                      routeParamCategory={route.match.params.category}\n                    />\n                  )}\n                />\n                <Route\n                  path={PUBLIC_URL + '/job/id-:id'}\n                  component={route => (\n                    <JobContainer routeParamId={route.match.params.id} />\n                  )}\n                />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","import { connect } from 'react-redux'\r\nimport { fetchJobs, checkedCategory } from '../actions/index'\r\nimport App from '../components/App'\r\n\r\nconst mapStateToProps = state => ({\r\n  state: state\r\n})\r\n\r\nconst mapDispatchToProps = { fetchJobs, checkedCategory }\r\n\r\nexport const AppContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './styles/_index.scss'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\nimport { AppContainer } from './containers/AppContainer'\nimport * as serviceWorker from './serviceWorker'\n\nexport const PUBLIC_URL = process.env.PUBLIC_URL\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}